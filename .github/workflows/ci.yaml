name: Fullstack CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # ------------------------------
  # 1. Security Scans (ci-security)
  # ------------------------------
  ci-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      # Dependency Scan (Nexus-like)
      - name: Run Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'fullstack-monorepo'
          path: './'
          format: 'JSON'
          out: 'dependency-check-report'

      - name: Parse Dependency Results
        id: parse_deps
        run: |
          REPORT="dependency-check-report/dependency-check-report.json"
          if [[ ! -f "$REPORT" ]]; then
            echo "critical_count=0" >> $GITHUB_ENV
            exit 0
          fi
          critical_count=$(jq '[.dependencies[].vulnerabilities[] | select(.severity=="CRITICAL")] | length' "$REPORT")
          echo "critical_count=$critical_count" >> $GITHUB_ENV

      - name: Download streak history artifact
        id: get_history
        uses: actions/download-artifact@v3
        with:
          name: nexus-streak
          path: nexus-streak
        continue-on-error: true

      - name: Compute streak
        run: |
          prev=0
          history_file="nexus-streak/history.txt"
          if [ -f "$history_file" ]; then
            prev=$(tail -n1 "$history_file")
          fi
          new=$prev
          if [ "${{ env.critical_count }}" -gt 0 ]; then
            new=$((prev+1))
          else
            new=0
          fi
          echo $new > nexus-streak/history.txt
          echo "Streak = $new"
          if [ $new -ge 5 ]; then
            echo "❌ Critical vulnerabilities 5 times in a row"
            exit 1
          fi

      - name: Upload streak history
        uses: actions/upload-artifact@v3
        with:
          name: nexus-streak
          path: nexus-streak

      # CodeQL (Checkmarx-like)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v2

      - name: Fail if CodeQL found results
        run: |
          # Check for any alerts via SARIF file (saved in codeql-results)
          if [ -d "$GITHUB_WORKSPACE/codeql-results" ]; then
            findings=$(find "$GITHUB_WORKSPACE/codeql-results" -name "*.sarif" -exec jq '.runs[].results | length' {} \; | awk '{sum+=$1} END {print sum}')
            echo "CodeQL findings: $findings"
            if [ "$findings" -gt 0 ]; then
              echo "❌ CodeQL scan found issues. Failing pipeline."
              exit 1
            fi
          fi

  # ------------------------------
  # 2. Angular UI Build/Test
  # ------------------------------
  angular-ui:
    runs-on: ubuntu-latest
    needs: ci-security # only runs if ci-security passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build Angular
        run: npx nx build angular-ui

      - name: Run Angular Lint
        run: npx nx lint angular-ui

      - name: Run Angular tests
        run: npx nx test angular-ui

  # ------------------------------
  # 3. Future projects (placeholder)
  # ------------------------------
  another-project:
    runs-on: ubuntu-latest
    needs: angular-ui
    if: false # disable for now
    steps:
      - run: echo "e.g., Node.js backend build/test, Docker image build, etc."
